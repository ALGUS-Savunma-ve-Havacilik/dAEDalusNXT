%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 
% Authors: Klaus Seywald (klaus.seywald@mytum.de) 
%          and Simon Binder (simon.binder@tum.de)
% 
% This file is part of dAEDalusNXT (https://github.com/seyk86/dAEDalusNXT)
%
function [ck_imag,ck_real,ck_magnit,ck_phase]=Theodorsen_parameters(k)
% function to calculate the lift deficiency factor value, based on a
% interpolation from a table (http://soliton.ae.gatech.edu/labs/windtunl/classes/unstaero/unstaf/theofn.html)
% website accessed date: 29.07.2016

% k, ck_real, ck_imag, ck_magnit, ck_phase
Matrix=[0	,	1	,	0	,	1	,	0
    0.01	,	0.9824216	,	-0.0456521	,	0.983481731	,	-0.046435545
    0.02	,	0.9637253	,	-0.0752079	,	0.96665541	,	-0.077880888
    0.03	,	0.9450111	,	-0.0979135	,	0.950070015	,	-0.10324256
    0.04	,	0.9267018	,	-0.1160013	,	0.933933899	,	-0.124528788
    0.05	,	0.9090087	,	-0.1306443	,	0.918348926	,	-0.142744244
    0.06	,	0.8920397	,	-0.1425944	,	0.903364815	,	-0.158511029
    0.08	,	0.8604318	,	-0.1604021	,	0.875255229	,	-0.184304879
    0.1	,	0.8319241	,	-0.1723022	,	0.849579753	,	-0.204225423
    0.12	,	0.8063273	,	-0.1800727	,	0.826189985	,	-0.219719176
    0.14	,	0.7833715	,	-0.1848904	,	0.804894631	,	-0.231777221
    0.16	,	0.7627719	,	-0.1875659	,	0.785494709	,	-0.241116491
    0.18	,	0.744257	,	-0.1886727	,	0.767799368	,	-0.248274541
    0.2	,	0.7275799	,	-0.1886242	,	0.751632623	,	-0.253664275
    0.22	,	0.7125211	,	-0.1877232	,	0.73683534	,	-0.257609371
    0.24	,	0.6988879	,	-0.186194	,	0.723265167	,	-0.260367125
    0.26	,	0.6865125	,	-0.1842043	,	0.710795777	,	-0.262144327
    0.28	,	0.6752492	,	-0.1818807	,	0.69931543	,	-0.263109115
    0.3	,	0.6649711	,	-0.1793191	,	0.688724839	,	-0.263399105
    0.32	,	0.6555686	,	-0.1765929	,	0.678936847	,	-0.263127942
    0.34	,	0.646946	,	-0.173758	,	0.669873846	,	-0.262389639
    0.36	,	0.63902	,	-0.1708575	,	0.661467192	,	-0.261262892
    0.38	,	0.6317179	,	-0.1679244	,	0.653655956	,	-0.259813466
    0.4	,	0.6249763	,	-0.164984	,	0.646386182	,	-0.258096542
    0.42	,	0.6187392	,	-0.1620556	,	0.639609424	,	-0.256158729
    0.44	,	0.6129575	,	-0.1591543	,	0.633282708	,	-0.254040017
    0.46	,	0.6075879	,	-0.1562909	,	0.627367438	,	-0.251773351
    0.48	,	0.6025921	,	-0.153474	,	0.621829163	,	-0.249387603
    0.5	,	0.5979361	,	-0.1507095	,	0.616636792	,	-0.24690668
    0.52	,	0.5935896	,	-0.1480019	,	0.611762352	,	-0.244351473
    0.54	,	0.5895258	,	-0.1453541	,	0.607180767	,	-0.241739394
    0.56	,	0.5857205	,	-0.1427682	,	0.602869192	,	-0.239085827
    0.58	,	0.5821522	,	-0.140245	,	0.598807017	,	-0.236403153
    0.6	,	0.5788016	,	-0.1377852	,	0.594975675	,	-0.233702788
    0.62	,	0.5756512	,	-0.1353885	,	0.591358056	,	-0.23099381
    0.64	,	0.5726853	,	-0.1330545	,	0.587938732	,	-0.228284376
    0.66	,	0.5698898	,	-0.1307822	,	0.584703658	,	-0.22558094
    0.68	,	0.5672518	,	-0.1285708	,	0.58163997	,	-0.222889711
    0.7	,	0.5647596	,	-0.1264189	,	0.578735815	,	-0.22021531
    0.72	,	0.5624026	,	-0.1243252	,	0.575980416	,	-0.21756196
    0.74	,	0.5601712	,	-0.1222882	,	0.573363913	,	-0.214933026
    0.76	,	0.5580567	,	-0.1203065	,	0.570877337	,	-0.212331558
    0.78	,	0.5560509	,	-0.1183784	,	0.568512136	,	-0.209759759
    0.8	,	0.5541466	,	-0.1165024	,	0.566260773	,	-0.207219659
    0.82	,	0.5523369	,	-0.1146768	,	0.564115963	,	-0.204712695
    0.86	,	0.5489774	,	-0.1111714	,	0.56012076	,	-0.199804329
    0.9	,	0.5459286	,	-0.1078496	,	0.556479625	,	-0.195041162
    0.94	,	0.5431533	,	-0.1046996	,	0.553152342	,	-0.19042686
    0.98	,	0.5406197	,	-0.1017105	,	0.55010425	,	-0.185963123
    1	,	0.5394349	,	-0.1002729	,	0.548675374	,	-0.183787422
    1.1	,	0.5342148	,	-0.0936062	,	0.542353734	,	-0.173461088
    1.2	,	0.529956	,	-0.087709	,	0.537164994	,	-0.164015683
    1.3	,	0.5264367	,	-0.0824643	,	0.532856416	,	-0.15538346
    1.4	,	0.5234957	,	-0.0777759	,	0.529241758	,	-0.147491391
    1.5	,	0.5210132	,	-0.0735641	,	0.526180987	,	-0.140267102
    1.6	,	0.5188992	,	-0.0697629	,	0.523567801	,	-0.13364267
    1.7	,	0.5170845	,	-0.0663173	,	0.521319829	,	-0.127556012
    1.8	,	0.5155155	,	-0.0631816	,	0.519372838	,	-0.121951855
    1.9	,	0.5141501	,	-0.0603171	,	0.517676036	,	-0.116780403
    2	,	0.5129548	,	-0.0576913	,	0.516188835	,	-0.111997939
    2.1	,	0.5119026	,	-0.0552762	,	0.514878364	,	-0.107565089
    2.2	,	0.5109717	,	-0.0530482	,	0.513718006	,	-0.103447675
    2.3	,	0.5101443	,	-0.0509871	,	0.512685958	,	-0.09961561
    2.4	,	0.5094058	,	-0.049075	,	0.511764228	,	-0.096041346
    2.5	,	0.508744	,	-0.0472969	,	0.510937818	,	-0.092701514
    3	,	0.5062799	,	-0.0400039	,	0.507857903	,	-0.078851554
    4	,	0.5036709	,	-0.0304961	,	0.504593289	,	-0.060473844
    5	,	0.5023973	,	-0.0245986	,	0.502999143	,	-0.048923375
    10	,	0.5006178	,	-0.0124467	,	0.500772505	,	-0.024857559
    ];

aux=find(Matrix(:,1)==k);

if isempty(aux)==0
    ck_real=Matrix(aux,2);
    ck_imag=Matrix(aux,3);
    ck_magnit=Matrix(aux,4);
    ck_phase=Matrix(aux,5);
else
    aux_minor=find(Matrix(:,1)<k);
    aux_major=find(Matrix(:,1)>k);
    
    ck_real=interp1(Matrix(aux_minor:aux_major,1),Matrix(aux_minor:aux_major,2),k,'spline');
    ck_imag=interp1(Matrix(aux_minor:aux_major,1),Matrix(aux_minor:aux_major,3),k,'spline');
    ck_magnit=interp1(Matrix(aux_minor:aux_major,1),Matrix(aux_minor:aux_major,4),k,'spline');
    ck_phase=interp1(Matrix(aux_minor:aux_major,1),Matrix(aux_minor:aux_major,5),k,'spline');
end
end
    
    
    
    
    
    
